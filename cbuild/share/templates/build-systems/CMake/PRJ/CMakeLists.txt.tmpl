cmake_minimum_required(VERSION 2.8)

project(%{ $PRJ_NAME }%)

set(CMAKE_RULE_MESSAGES OFF)
set(CMAKE_COLOR_MAKEFILE OFF)
set(CMAKE_VERBOSE_MAKEFILE OFF)

set(CMAKE_EXE_LINKER_FLAGS "%{ ${CB_LFLAGS[@]} }% %{ ${CB_BIN_LFLAGS[@]} }%")
set(CMAKE_SHARED_LINKER_FLAGS "%{ ${CB_LFLAGS[@]} }% %{ ${CB_LIB_LFLAGS[@]} }%")
set(CMAKE_MODULE_LINKER_FLAGS "%{ ${CB_LFLAGS[@]} }%")
set(CMAKE_CXX_FLAGS "%{ ${CB_GEN_FLAGS[@]} }% %{ ${CB_CXXFLAGS[@]} }%")
set(CMAKE_C_FLAGS "%{ ${CB_GEN_FLAGS[@]} }% %{ ${CB_CFLAGS[@]} }%")
% if [[ $CPKG_DIST == "MacOSX" ]]; then
set(CMAKE_MACOSX_RPATH OFF)
set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
set(CMAKE_INSTALL_NAME_DIR "%{ $PKG_SYSLIBDIR }%")
set(CMAKE_INSTALL_RPATH "%{ $PKG_SYSLIBDIR }%")
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
% fi
% if (($CB_CPUS > 1)); then
set(CMAKE_ECLIPSE_MAKE_ARGUMENTS "-j%{ $CB_CPUS }%")
% fi

add_definitions(
    -D%{ ${PRJ_DEFPREFIX} }%EXPORTS
    -D%{ ${CPKG_PF^^} }%
    -D%{ ${CPKG_OS^^} }%
% if [[ ${PRJ_OPTS[stack_protector]} && $CPKG_DIST != "MacOSX" ]]; then
    -D_FORTIFY_SOURCE=2
% fi
% if ((${PRJ_OPTS[debug]})); then
    -DDEBUG=1
% fi
    -DBOOST_ALL_DYN_LINK
)

include_directories(%{ "../build/$PRJ_GENINCNAME" }%)

install(
    DIRECTORY %{ "../build/$PRJ_GENINCNAME/" }%
    DESTINATION include/%{ $PRJ_NAME }%
)
% if ((${#HEADER_DIRS} > 0)); then
%     for INCDIR in ${HEADER_DIRS[@]}; do
%         RELDIR=${INCDIR//$PRJ_SRCDIR\//}

install(
    DIRECTORY %{ "$RELDIR/" }%
    DESTINATION include/%{ $PRJ_NAME }%
)
%     done
% fi
% if [ -d "$PRJ_PRIVINCDIR" ]; then

include_directories(%{ "../build/$PRJ_PRIVINCNAME" }%)
% fi
% if [ -d "$PRJ_INCDIR" ]; then

include_directories(%{ "../$PRJ_INCNAME" }%)

install(
    DIRECTORY %{ "../$PRJ_INCNAME" }%
    DESTINATION include/%{ $PRJ_NAME }%
)
% fi
% if ((${#PRJ_LIBS} > 0)); then

install(
    DIRECTORY %{ "../build/pkgconfig/" }%
    DESTINATION lib/pkgconfig
)
% fi

install(
    DIRECTORY ../etc/
    DESTINATION /etc/%{ $PRJ_NAME }%
    OPTIONAL
    FILES_MATCHING PATTERN "*"
)

install(
    DIRECTORY ../etc_/
    DESTINATION /etc
    OPTIONAL
    FILES_MATCHING PATTERN "*"
)

install(
    DIRECTORY ../share/
    DESTINATION share/%{ $PRJ_NAME }%
    OPTIONAL
    FILES_MATCHING PATTERN "*"
)

install(
    DIRECTORY ../share_/
    DESTINATION share
    OPTIONAL
    FILES_MATCHING PATTERN "*"
)

install(
    DIRECTORY ../build/man/
    DESTINATION %{ ${PKG_MANDIR//$CPKG_PREFIX\//} }%/man1
    OPTIONAL
)

% for T in ${PRJ_LIBS[@]}; do
%     if [[ "${HLIB_TARGET_MAP[$T]}" ]]; then
%         continue
%     fi
%
add_subdirectory(libraries/%{ $T }%)
% done
% for T in ${PRJ_PLUGS[@]}; do
add_subdirectory(plugins/%{ $T }%)
% done
% for T in ${PRJ_BINS[@]}; do
add_subdirectory(binaries/%{ $T }%)
% done
% for T in ${PRJ_TSTS[@]}; do
add_subdirectory(tests/%{ $T }%)
% done
